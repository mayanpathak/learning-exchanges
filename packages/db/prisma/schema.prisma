generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  phoneNumber String     @unique
  balance     Int        @default(10000)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?  @updatedAt
  orders      Order[]
  OTPs        OTP[]
  positions   Position[]
  trades      Trade[]
}

model Order {
  id          String      @id
  entryPrice  Float
  quantity    Float
  leverage    Int
  executedQty Float?
  createdAt   DateTime    @default(now())
  user        User        @relation(references: [id], fields: [userId])
  userId      String
  status      OrderStatus @default(PENDING)
  trades      Trade[]
  side        TradeSide
}

model Position {
  id            String     @default(cuid())
  userId        String     @id @unique
  side          TradeSide
  quantity      Int
  entryPrice    Int
  margin        Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
  
}

model Trade {
  id          String     @id @default(cuid())
  orderId     String
  order       Order     @relation(references: [id], fields: [orderId])
  userId      String
  user        User      @relation(references: [id], fields: [userId])
  quantity    Int
  price       Float
  side        TradeSide
}

model OTP {
  id          String   @id @default(cuid())
  code        String
  phoneNumber String
  isVerified  Boolean  @default(false)
  expiresAt   DateTime
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  createdAt   DateTime @default(now())
}

model Depth {
  id        String   @id @default("BTCUSDT")
  bids      Json
  asks      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TradeSide {
  LONG
  SHORT
  UNINITIALIZED
}

enum OrderStatus {
  PENDING
  FILLED
  PARTIALLY_FILLED
  CANCELLED
}
